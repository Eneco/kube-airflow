apiVersion: v1
kind: Service
metadata:
  name: af-postgres
spec:
  type: ClusterIP
  selector:
    app: airflow
    tier: db
  ports:
    - name: af-postgres
      protocol: TCP
      port: 5432
      targetPort: af-postgres
---
apiVersion: v1
kind: Service
metadata:
  name: af-rabbitmq
spec:
  type: ClusterIP
  selector:
    app: airflow
    tier: rabbitmq
  ports:
    - name: node
      protocol: TCP
      port: 5672
      targetPort: node
    - name: management
      protocol: TCP
      port: 15672
      targetPort: management
---
apiVersion: v1
kind: Service
metadata:
  name: af-web
spec:
  type: NodePort
  selector:
    app: airflow
    tier: web
  ports:
    - name: af-web
      protocol: TCP
      port: 8080
      targetPort: af-web
      nodePort: 32080
---
apiVersion: v1
kind: Service
metadata:
  name: af-flower
spec:
  type: NodePort
  selector:
    app: airflow
    tier: flower
  ports:
    - name: af-flower
      protocol: TCP
      port: 5555
      targetPort: af-flower
      nodePort: 32081
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: af-postgres
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: db
    spec:
      containers:
      - name: af-postgres
        image: postgres
        ports:
        - name: af-postgres
          containerPort: 5432
        env:
         - name: POSTGRES_USER
           value: "airflow"
         - name: POSTGRES_PASSWORD
           value: "airflow"
         - name: POSTGRES_DB
           value: "airflow"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: af-rabbitmq
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: rabbitmq
    spec:
      restartPolicy: Always
      containers:
      - name: af-rabbitmq
        image: rabbitmq:3-management
        ports:
        - name: management
          containerPort: 15672
        - name: node
          containerPort: 5672
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: airflow
        - name: RABBITMQ_DEFAULT_PASS
          value: airflow
        - name: RABBITMQ_DEFAULT_VHOST
          value: airflow
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: af-web
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: web
    spec:
      restartPolicy: Always
      containers:
      - name: af-web
        image: mumoshu/kube-airflow:1.8.0.0-1.6.1
        env:
        - name: AIRFLOW_HOME
          value: "/usr/local/airflow"
        ports:
        - name: af-web
          containerPort: 8080
        args: ["webserver"]
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: af-flower
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: flower
    spec:
      restartPolicy: Always
      containers:
      - name: af-flower
        image: mumoshu/kube-airflow:1.8.0.0-1.6.1
        env:
        - name: AIRFLOW_HOME
          value: "/usr/local/airflow"
        # To prevent the error: ValueError: invalid literal for int() with base 10: 'tcp://10.0.0.83:5555'
        - name: FLOWER_PORT
          value: "5555"
        ports:
        - name: af-flower
          containerPort: 5555
        args: ["flower"]
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: af-scheduler
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: scheduler
    spec:
      restartPolicy: Always
      containers:
      - name: af-scheduler
        image: mumoshu/kube-airflow:1.8.0.0-1.6.1
        # volumes:
        #     - /localpath/to/dags:/usr/local/airflow/dags
        env:
        - name: AIRFLOW_HOME
          value: "/usr/local/airflow"
        args: ["scheduler", "-n", "5"]
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: af-worker
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: worker
    spec:
      restartPolicy: Always
      containers:
      - name: af-worker
        image: mumoshu/kube-airflow:1.8.0.0-1.6.1
        # volumes:
        #     - /localpath/to/dags:/usr/local/airflow/dags
        env:
        - name: AIRFLOW_HOME
          value: "/usr/local/airflow"
        args: ["worker"]
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: airflow
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule: PathPrefixStrip
spec:
  rules:
    - host: kube.tls.renault.fr
      http:
        paths:
          - path: /airflow
            backend:
              serviceName: af-web
              servicePort: 8080

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: airflow-flower
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.frontend.rule: PathPrefixStrip
spec:
  rules:
    - host: kube.tls.renault.fr
      http:
        paths:
          - path: /airflow-flower
            backend:
              serviceName: af-flower
              servicePort: 5555
