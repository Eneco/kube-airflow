apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.airflow.prefix -}}postgres
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: db
    spec:
      containers:
      - name: {{ .Values.airflow.prefix -}}postgres
        image: postgres
        ports:
        - name: {{ .Values.airflow.prefix -}}postgres
          containerPort: 5432
        env:
         - name: POSTGRES_USER
           value: "{{ .Values.airflow.db.postgres.user -}}"
         - name: POSTGRES_PASSWORD
           value: "{{ .Values.airflow.db.postgres.password -}}"
         - name: POSTGRES_DB
           value: "{{ .Values.airflow.db.postgres.database -}}"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.airflow.prefix -}}rabbitmq
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: rabbitmq
    spec:
      restartPolicy: Always
      containers:
      - name: {{ .Values.airflow.prefix -}}rabbitmq
        image: rabbitmq:3-management
        ports:
        - name: management
          containerPort: 15672
        - name: node
          containerPort: 5672
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: "{{ .Values.airflow.db.rabbitmq.user -}}"
        - name: RABBITMQ_DEFAULT_PASS
          value: "{{ .Values.airflow.db.rabbitmq.password -}}"
        - name: RABBITMQ_DEFAULT_VHOST
          value: "airflow"
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.airflow.prefix -}}web
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: web
    spec:
      restartPolicy: Always
      containers:
      - name: {{ .Values.airflow.prefix -}}web
        image: {{ .Values.airflow.image }}
        env:
        - name: AIRFLOW_HOME
          value: "/usr/local/airflow"
        {{- if .Values.airflow.fernet_key }}
        - name: FERNET_KEY
          value: "{{- .Values.airflow.fernet_key -}}"
        {{ end -}}
        - name: RABBITMQ_HOST
          value: "{{- .Values.airflow.prefix -}}{{- .Values.airflow.db.rabbitmq.basename -}}"
        - name: RABBITMQ_CREDS
          value: "{{- .Values.airflow.db.rabbitmq.user -}}:{{- .Values.airflow.db.rabbitmq.password -}}"
        - name: POSTGRES_HOST
          value: "{{- .Values.airflow.prefix -}}{{- .Values.airflow.db.postgres.basename -}}"
        - name: POSTGRES_CREDS
          value: "{{- .Values.airflow.db.postgres.user -}}:{{- .Values.airflow.db.postgres.password -}}"
        ports:
        - name: {{ .Values.airflow.prefix -}}web
          containerPort: 8080
        args: ["webserver"]
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.airflow.prefix -}}flower
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: flower
    spec:
      restartPolicy: Always
      containers:
      - name: {{ .Values.airflow.prefix -}}flower
        image: {{ .Values.airflow.image }}
        env:
        - name: AIRFLOW_HOME
          value: "/usr/local/airflow"
        # To prevent the error: ValueError: invalid literal for int() with base 10: 'tcp://10.0.0.83:5555'
        - name: FLOWER_PORT
          value: "5555"
        {{- if .Values.airflow.fernet_key }}
        - name: FERNET_KEY
          value: "{{- .Values.airflow.fernet_key -}}"
        {{ end -}}
        - name: RABBITMQ_HOST
          value: "{{- .Values.airflow.prefix -}}{{- .Values.airflow.db.rabbitmq.basename -}}"
        - name: RABBITMQ_CREDS
          value: "{{- .Values.airflow.db.rabbitmq.user -}}:{{- .Values.airflow.db.rabbitmq.password -}}"
        - name: POSTGRES_HOST
          value: "{{- .Values.airflow.prefix -}}{{- .Values.airflow.db.postgres.basename -}}"
        - name: POSTGRES_CREDS
          value: "{{- .Values.airflow.db.postgres.user -}}:{{- .Values.airflow.db.postgres.password -}}"
        ports:
        - name: {{ .Values.airflow.prefix -}}flower
          containerPort: 5555
        args: ["flower"]
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.airflow.prefix -}}scheduler
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: scheduler
    spec:
      restartPolicy: Always
      containers:
      - name: {{ .Values.airflow.prefix -}}scheduler
        image: {{ .Values.airflow.image }}
        # volumes:
        #     - /localpath/to/dags:/usr/local/airflow/dags
        env:
        - name: AIRFLOW_HOME
          value: "/usr/local/airflow"
        {{- if .Values.airflow.fernet_key }}
        - name: FERNET_KEY
          value: "{{- .Values.airflow.fernet_key -}}"
        {{ end -}}
        - name: RABBITMQ_HOST
          value: "{{- .Values.airflow.prefix -}}{{- .Values.airflow.db.rabbitmq.basename -}}"
        - name: RABBITMQ_CREDS
          value: "{{- .Values.airflow.db.rabbitmq.user -}}:{{- .Values.airflow.db.rabbitmq.password -}}"
        - name: POSTGRES_HOST
          value: "{{- .Values.airflow.prefix -}}{{- .Values.airflow.db.postgres.basename -}}"
        - name: POSTGRES_CREDS
          value: "{{- .Values.airflow.db.postgres.user -}}:{{- .Values.airflow.db.postgres.password -}}"
        args: ["scheduler", "-n", "5"]
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.airflow.prefix -}}worker
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: airflow
        tier: worker
    spec:
      restartPolicy: Always
      containers:
      - name: {{ .Values.airflow.prefix -}}worker
        image: {{ .Values.airflow.image }}
        # volumes:
        #     - /localpath/to/dags:/usr/local/airflow/dags
        env:
        - name: AIRFLOW_HOME
          value: "/usr/local/airflow"
        {{- if .Values.airflow.fernet_key }}
        - name: FERNET_KEY
          value: "{{- .Values.airflow.fernet_key -}}"
        {{ end -}}
        - name: RABBITMQ_HOST
          value: "{{- .Values.airflow.prefix -}}{{- .Values.airflow.db.rabbitmq.basename -}}"
        - name: RABBITMQ_CREDS
          value: "{{- .Values.airflow.db.rabbitmq.user -}}:{{- .Values.airflow.db.rabbitmq.password -}}"
        - name: POSTGRES_HOST
          value: "{{- .Values.airflow.prefix -}}{{- .Values.airflow.db.postgres.basename -}}"
        - name: POSTGRES_CREDS
          value: "{{- .Values.airflow.db.postgres.user -}}:{{- .Values.airflow.db.postgres.password -}}"
        args: ["worker"]
    volumes:
      - name: dags-data
      {{- if .Values.airflow.persistence.enabled }}
        persistentVolumeClaim:
            claimName: {{ .Values.airflow.persistence.existingClaim | default (include "airflow.fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
